apiVersion: v1
kind: Service
metadata:
  labels:
    app: postgres
  name: postgres
spec:
  ports:
  - name: postgres
    port: 5434
    protocol: TCP
    targetPort: 5432
  selector:
    app: postgres
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: webapp
  name: webapp
spec:
  ports:
  - name: webapp
    port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: webapp
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  serviceName: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - env:
        - name: POSTGRES_DB
          value: postgresdb
        - name: POSTGRES_USER
          value: postgres
        - name: PGUSER
          value: postgres
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: postgres
              name: postgres-passwords
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        image: docker.io/library/postgres:11.11-alpine
        imagePullPolicy: IfNotPresent
        name: postgres
        ports:
        - containerPort: 5432
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready --host $POD_IP
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres
          subPath: data
  volumeClaimTemplates:
  - metadata:
      name: postgres
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
      storageClassName: gold
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: webapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webapp
  serviceName: webapp
  template:
    metadata:
      annotations:
      labels:
        app: webapp
    spec:
      containers:
      - name: webapp
        image: gcr.io/on-prem-test-314219/interview-project/webapp:latest
        imagePullPolicy: Always
        ports:
          - containerPort: 5000 
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: postgres
              name: postgres-passwords
 
